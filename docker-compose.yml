services:
  backend:
    build: ./backend
    volumes:
      - static_volume:/backend/static
      - media_volume:/backend/media
    depends_on:
      postgres-backend:
        condition: service_healthy
    environment:
      - DJANGO_DOCKER=True
    env_file:
      - .env

  postgres-backend:
    image: postgres:17-alpine
    ports:
      - ${BACKEND_DB_PORT}:${BACKEND_DB_PORT}
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${BACKEND_DB_USER}
      - POSTGRES_PASSWORD=${BACKEND_DB_PASSWORD}
      - POSTGRES_PORT=${BACKEND_DB_PORT}
      - POSTGRES_DB=${BACKEND_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 1s
      timeout: 3s
      retries: 5
    # command: -p $${POSTGRES_PORT}

  nginx:
    build: ./nginx
    depends_on:
      - backend
    volumes:
      - static_volume:/backend/static
      - media_volume:/backend/media
    env_file:
      - .env
    ports:
      - ${BACKEND_PORT}:80

  redis:
    image: redis:alpine
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"

  celery:
    build: ./backend
    volumes:
      - static_volume:/backend/static
      - media_volume:/backend/media
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A config worker -l INFO
    env_file:
      - .env



volumes:
  static_volume:
  media_volume:
